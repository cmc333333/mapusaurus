# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-12-09 18:00
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('geo', '0015_auto_20180404_0412'),
    ]

    operations = [
        migrations.CreateModel(
            name='CoreBasedStatisticalArea',
            fields=[
                ('name', models.CharField(max_length=64)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('interior_lat', models.FloatField()),
                ('interior_lon', models.FloatField()),
                ('min_lat', models.FloatField()),
                ('max_lat', models.FloatField()),
                ('min_lon', models.FloatField()),
                ('max_lon', models.FloatField()),
                ('geoid', models.CharField(max_length=5, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('\\d{5}')])),
                ('metro', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('name', models.CharField(max_length=64)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('interior_lat', models.FloatField()),
                ('interior_lon', models.FloatField()),
                ('min_lat', models.FloatField()),
                ('max_lat', models.FloatField()),
                ('min_lon', models.FloatField()),
                ('max_lon', models.FloatField()),
                ('geoid', models.CharField(max_length=5, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('\\d{5}')])),
                ('county_only', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator('\\d{3}')])),
                ('cbsa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.CoreBasedStatisticalArea')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('name', models.CharField(max_length=64)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('interior_lat', models.FloatField()),
                ('interior_lon', models.FloatField()),
                ('min_lat', models.FloatField()),
                ('max_lat', models.FloatField()),
                ('min_lon', models.FloatField()),
                ('max_lon', models.FloatField()),
                ('geoid', models.CharField(choices=[('01', 'Alabama'), ('02', 'Alaska'), ('60', 'American Samoa'), ('04', 'Arizona'), ('05', 'Arkansas'), ('06', 'California'), ('08', 'Colorado'), ('09', 'Connecticut'), (None, 'Dakota'), ('10', 'Delaware'), ('11', 'District of Columbia'), ('12', 'Florida'), ('13', 'Georgia'), ('66', 'Guam'), ('15', 'Hawaii'), ('16', 'Idaho'), ('17', 'Illinois'), ('18', 'Indiana'), ('19', 'Iowa'), ('20', 'Kansas'), ('21', 'Kentucky'), ('22', 'Louisiana'), ('23', 'Maine'), ('24', 'Maryland'), ('25', 'Massachusetts'), ('26', 'Michigan'), ('27', 'Minnesota'), ('28', 'Mississippi'), ('29', 'Missouri'), ('30', 'Montana'), ('31', 'Nebraska'), ('32', 'Nevada'), ('33', 'New Hampshire'), ('34', 'New Jersey'), ('35', 'New Mexico'), ('36', 'New York'), ('37', 'North Carolina'), ('38', 'North Dakota'), ('69', 'Northern Mariana Islands'), ('39', 'Ohio'), ('40', 'Oklahoma'), ('41', 'Oregon'), (None, 'Orleans'), ('42', 'Pennsylvania'), (None, 'Philippine Islands'), ('72', 'Puerto Rico'), ('44', 'Rhode Island'), ('45', 'South Carolina'), ('46', 'South Dakota'), ('47', 'Tennessee'), ('48', 'Texas'), ('49', 'Utah'), ('50', 'Vermont'), ('78', 'Virgin Islands'), ('51', 'Virginia'), ('53', 'Washington'), ('54', 'West Virginia'), ('55', 'Wisconsin'), ('56', 'Wyoming')], max_length=2, primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tract',
            fields=[
                ('name', models.CharField(max_length=64)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('interior_lat', models.FloatField()),
                ('interior_lon', models.FloatField()),
                ('min_lat', models.FloatField()),
                ('max_lat', models.FloatField()),
                ('min_lon', models.FloatField()),
                ('max_lon', models.FloatField()),
                ('geoid', models.CharField(max_length=11, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('\\d{11}')])),
                ('tract_only', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('\\d{6}')])),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.County')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='CensusTract',
        ),
        migrations.DeleteModel(
            name='TractProperty',
        ),
        migrations.AddField(
            model_name='county',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.State'),
        ),
    ]
