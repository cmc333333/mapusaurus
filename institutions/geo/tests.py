import json

from django.core.urlresolvers import reverse
from django.test import TestCase

from .models import censustract_mapping


class StateCensusTractModelTest(TestCase):
    def test_census_tract_mapping(self):
        """ This mapping is generated by ogrinspect. This test ensures we
        don't inadvertently change it. Otherwise, data loading won't work. """

        for key, value in censustract_mapping.items():
            if key == 'geom':
                self.assertEqual(value, 'MULTIPOLYGON')
            else:
                self.assertEqual(key.upper(), value)


class ViewTest(TestCase):
    fixtures = ['many_tracts']

    def test_tracts(self):
        resp = self.client.get(reverse('geo:tractsgeojson'),
                               {'state_fips': '11', 'county_fips': '222'})
        resp = json.loads(resp.content)
        features = resp['features']
        self.assertEqual(len(features), 4)

        ids = map(lambda feature: feature['properties']['geoid'], features)
        self.assertTrue('1122233300' in ids)
        self.assertTrue('1122233400' in ids)
        self.assertTrue('1122233500' in ids)
        self.assertTrue('1122233600' in ids)

    def test_tracts_page(self):
        resp = self.client.get(reverse('geo:tractsgeojson'),
                               {'state_fips': '11', 'county_fips': '222',
                                'page_size': 2, 'page_num': 0})
        resp = json.loads(resp.content)
        features = resp['features']
        self.assertEqual(len(features), 2)

        ids = map(lambda feature: feature['properties']['geoid'], features)
        self.assertTrue('1122233300' in ids)
        self.assertTrue('1122233400' in ids)

        resp = self.client.get(reverse('geo:tractsgeojson'),
                               {'state_fips': '11', 'county_fips': '222',
                                'page_size': 3, 'page_num': 1})
        resp = json.loads(resp.content)
        features = resp['features']
        self.assertEqual(len(features), 1)

        ids = map(lambda feature: feature['properties']['geoid'], features)
        self.assertTrue('1122233600' in ids)

        resp = self.client.get(reverse('geo:tractsgeojson'),
                               {'state_fips': '11', 'county_fips': '222',
                                'page_size': 5, 'page_num': 22})
        resp = json.loads(resp.content)
        features = resp['features']
        self.assertEqual(len(features), 0)
