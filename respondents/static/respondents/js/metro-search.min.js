"use strict";

$(document).ready(function() {
    function setupMetroSearch() {
        var $container = $("#metro-search"), $searchBox = $container.find("[name=q]"), $metro = $container.find("[name=metro]"), $submit = $container.find("[type=submit]"), year = $container.find("[name=year]").val(), search = new Bloodhound({
            datumTokenizer: function(d) {
                return Bloodhound.tokenizers.whitespace(d.name);
            },
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            remote: {
                filter: function(resp) {
                    return resp.geos;
                },
                prepare: function(query, settings) {
                    return settings.url = "/shapes/search/metro/?year=" + year + "&q=" + query, settings;
                },
                url: "/shapes/search/metro/?year=" + year
            }
        });
        search.initialize(), $searchBox.typeahead({
            highlight: !0
        }, {
            displayKey: "name",
            source: search.ttAdapter()
        }).on("keyup", function() {
            $searchBox.val() !== $metro.data("name") && ($metro.val(""), $submit.prop("disabled", !0).addClass("btn__disabled"));
        }).on("typeahead:selected", function(ev, suggestion) {
            $metro.val(suggestion.geoid).data("name", suggestion.name), $submit.prop("disabled", !1).removeClass("btn__disabled");
        });
    }
    function setupCountySearch() {
        function resetCounties() {
            var geoids = [];
            $selectedCounties.find("li").each(function() {
                geoids.push($(this).attr("data-geoid"));
            }), $county.val(geoids.join(",")), geoids.length ? $submit.prop("disabled", !1).removeClass("btn__disabled") : $submit.prop("disabled", !0).addClass("btn__disabled");
        }
        var $container = $("#county-search"), $searchBox = $container.find("[name=q]"), $state = $container.find("[name=state]"), $county = $container.find("[name=county]"), $submit = $container.find("[type=submit]"), $selectedCounties = $container.find(".selected-counties"), year = $container.find("[name=year]").val(), search = new Bloodhound({
            datumTokenizer: function(d) {
                return Bloodhound.tokenizers.whitespace(d.name);
            },
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            remote: {
                filter: function(resp) {
                    return resp.geos;
                },
                prepare: function(query, settings) {
                    var state = $state.val();
                    return settings.url = "/shapes/search/county/?year=" + year + "&state=" + state + "&q=" + query, 
                    settings;
                },
                url: "/shapes/search/county/?year=" + year
            }
        });
        search.initialize(), $searchBox.typeahead({
            highlight: !0
        }, {
            displayKey: "name",
            source: search.ttAdapter()
        }).on("typeahead:selected", function(ev, suggestion) {
            var state = $state.find("option:selected").data("abbr"), $li = $("<li/>", {
                text: suggestion.name + " County, " + state + " "
            });
            $li.appendTo($selectedCounties), $li.append($("<button/>", {
                class: "selected-counties__remove",
                text: "x"
            }).click(function() {
                $li.remove(), resetCounties();
            })), $li.attr("data-geoid", suggestion.geoid), resetCounties(), $searchBox.typeahead("val", "");
        }), $state.on("change", function() {
            $searchBox.typeahead("val", "");
        });
    }
    setupMetroSearch(), setupCountySearch();
});
//# sourceMappingURL=metro-search.min.js.map