function getTableData(reportName) {
    return $.ajax({
        url: "/reports/" + reportName + "/",
        data: {
            lender: urlParam("lender") || "",
            metro: (urlParam("metro") || "").substr(4),
            year: urlParam("year") || ""
        },
        traditional: !0
    }).fail(function(response) {
        console.log("Error retrieving data", response.status, response.responseText);
    });
}

function createTable(reportName) {
    getTableData(reportName).done(function(res) {
        var $tbl = buildTable(res);
        activateTable($tbl), $("#tableLoadImage").hide(), $tbl.appendTo($("#table-container")).show(), 
        $("#closeTable").on("click", function() {
            toggleDataContainer(!1), currentChart = "undefined", $(".chart-toggle").removeClass("active-layer");
        }), generateTooltips("#table-container", [ 0, -1 ]);
    });
}

function prepTableData(data) {
    var msa = data.msa;
    return _.extend(msa, prepNumbers(msa)), msa.peerData = getPeerData(msa), _.each(data.counties, function(county, key) {
        _.extend(county, prepNumbers(county)), county.peerData = getPeerData(county), county.geoid = key;
    }), data;
}

function decimalToPercentage(val) {
    var num = parseFloat(val);
    if (!isNaN(num)) return +(100 * num).toFixed(2);
}

function prepNumbers(data) {
    var obj = {}, suffix = "_pct", len = suffix.length;
    return _.each(data, function(val, key) {
        -1 !== key.indexOf(suffix, key.length - len) && (obj[key] = decimalToPercentage(val) || 0);
    }), obj;
}

function getPeerData(data) {
    var peerData = {
        isPeer: !0
    };
    return _.each(data, function(val, key) {
        var strs = key.split("_");
        "peer" === strs[0] && (peerData[strs.slice(1).join("_")] = val);
    }), peerData;
}

function buildTable(tableData) {
    return _.each(tableData.data, function(row) {
        _.each(tableData.fields, function(fieldName) {
            var value = row[fieldName];
            _.isNumber(value) && (row[fieldName] = row[fieldName].toLocaleString());
        });
    }), $(reportTemplate({
        fieldNames: tableData.fields,
        rows: tableData.data
    }));
}

function activateTable($tbl) {
    return $tbl.tablesorter({
        headerTemplate: "",
        widgets: [ "stickyHeaders" ],
        widgetOptions: {
            stickyHeaders_attachTo: "#data-container"
        }
    });
}

function destroyData() {
    destroyTable(), $("#table-container").hide(), setMapHeight();
}

function destroyTable() {
    $(".summary-data-table").trigger("destroy").remove(), setMapHeight();
}

function toggleDataContainer(showData) {
    showDataContainer = showData, showData ? ($("#data-container").show(), $("#data-container-sizer").show()) : ($("#data-container").hide(), 
    $("#data-container-sizer").hide()), setMapHeight();
}

function getOddsClass(ratio) {
    return 0 < ratio && ratio <= .4 || 0 === ratio ? "odds-warning" : .4 < ratio && ratio < .8 ? "odds-caution" : "odds-normal";
}

var reportTemplate, currentChart;

$(document).ready(function() {
    _.templateSettings.variable = "data", reportTemplate = _.template($("script.report-template").html()), 
    $(".chart-toggle").click(function(e) {
        var $target = $(e.target).closest(".chart-toggle"), id = $target.attr("id") || "";
        $(".chart-toggle").removeClass("active-layer"), $target.addClass("active-layer"), 
        currentChart && destroyData(), currentChart != id ? (createTable(id.substr("chart-toggle__".length)), 
        $("#table-container").show(), currentChart = id, toggleDataContainer(!0)) : (currentChart = null, 
        toggleDataContainer(!1), $(".chart-toggle").removeClass("active-layer"));
    });
});
//# sourceMappingURL=table.min.js.map